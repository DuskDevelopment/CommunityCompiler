(* Dusk EBNF by Rdrpenguin *)

alphachar = ? all upper- and lower-case letters ?
numchar = ? all numbers ?
alphanum = alphachar | numchar
whitespace = ? all whitespace characters ?

identifier = alphachar, {alphanum}
number = ["-"], (("1","2","3","4","5","6","7","8","9"), {numchar}) | "0"

expression = identifier | number

vardecl = ("var" | "let"), whitespace, {whitespace}, identifier, {whitespace}, [":", {whitespace}, identifier, {whitespace}], ["=", {whitespace}, expression, {whitespace}] (* We'll let semantics get some of the tricky cases here *)

return = "return", whitespace {whitespace}, expression

statement = (vardecl | return | expression), {whitespace}, ";"

code block = "{", {whitespace}, {statement, {whitespace}}, [expression, {whitespace}], "}"

function = "fn", whitespace, {whitespace}, identifier, {whitespace}, "(", [{whitespace}, identifier, whitespace, {whitespace}, identifier, {whitespace}, {",", {whitespace}, identifier, whitespace, {whitespace}, identifier, {whitespace}}], ")", {whitespace}, [":", {whitespace}, identifier, {whitespace}], code block

grammar = {(function | statement), {whitespace}}
